{"ast":null,"code":"const BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api/';\nexport const fetchActivities = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/activities`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchRoutines = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/routines`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchUserData = async token => {\n  try {\n    const user_data_headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n    const response = await fetch('http://fitnesstrac-kr.herokuapp.com/guests/me', {\n      headers: user_data_headers\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const AddRoutines = async (token, routine) => {\n  try {\n    const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        post: routine\n      })\n    });\n    const result = await response.json;\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n_c = AddRoutines;\nexport const addActivities = async (token, activity) => {\n  try {\n    const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities', {\n      method: \"POST\",\n      header: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        message: {\n          content: activity\n        }\n      })\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteActivities = async (token, activity) => {\n  try {\n    const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/activities`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const result = await response.json();\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteRoutines = async (token, routine) => {\n  try {\n    const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const result = await response.json();\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoutines\");","map":{"version":3,"sources":["/home/drillcode/coursework/FitTrack/src/util/index.js"],"names":["BASE_URL","fetchActivities","response","fetch","headers","result","json","error","console","log","fetchRoutines","fetchUserData","token","user_data_headers","AddRoutines","routine","method","body","JSON","stringify","post","addActivities","activity","header","message","content","deleteActivities","deleteRoutines"],"mappings":"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","sourcesContent":["const BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api/'\n\nexport const fetchActivities = async () => {\n    try {\n         const response = await fetch(`${BASE_URL}/activities`, {\n             headers: {\n                 'Content-Type': 'application/json', \n             },\n         })\n         const result = await response.json()\n         return result;   \n    }catch (error) {\n        console.log(error)\n    }\n}\n\nexport const fetchRoutines = async () => {\n    try {\n        const response = await fetch(`${BASE_URL}/routines`, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        const result = await response.json()\n        return result\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const fetchUserData = async (token) => {\n    try {\n        const user_data_headers = {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n        const response = await fetch('http://fitnesstrac-kr.herokuapp.com/guests/me', {\n            headers: user_data_headers  \n        })\n        const result = await response.json()\n        return result\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const AddRoutines = async (token, routine) => {\n    try {\n        const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/routines', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                post:routine\n            })\n        })\n        const result = await response.json\n        console.log(result)\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const addActivities = async (token, activity) => {\n    try {\n        const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities', {\n            method: \"POST\",\n            header: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                message: {\n                    content: activity\n                }\n            })\n        })\n        const result = await response.json()\n        return result\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const deleteActivities = async (token, activity) => {\n    try {\n        const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/activities`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const result = await response.json()\n        console.log(result)\n    } catch(error) {\n        console.log(error)\n    }\n}\n\nexport const deleteRoutines = async(token, routine) => {\n    try {\n        const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const result = await response.json()\n        console.log(result) \n    } catch(error) {\n        console.log(error)\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}