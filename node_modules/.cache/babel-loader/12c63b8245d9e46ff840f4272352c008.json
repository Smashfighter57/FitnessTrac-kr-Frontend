{"ast":null,"code":"var _jsxFileName = \"/home/drillcode/coursework/FitTrack/src/components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountForm = _ref => {\n  _s();\n\n  let {\n    setToken,\n    setIsLoggedIn,\n    isLoggedIn\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showCredentialsError, setShowCredentialsError] = useState(false);\n  const [accountError, setAccountError] = useState('');\n  const [currentUser, setCurrentUser] = useState({});\n  const navigate = useNavigate();\n  const {\n    action\n  } = useParams;\n  useEffect(() => {\n    if (isLoggedIn) navigate('/home');\n  }, [isLoggedIn]);\n\n  const fetchUserData = async auth_token => {\n    try {\n      const user_data_headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${auth_token}`\n      };\n      console.log(user_data_headers);\n      const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/guests/me`, {\n        headers: user_data_headers\n      });\n      const result = await response.json();\n      console.log(result);\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const submitAccountInfo = async event => {\n    try {\n      event.preventDefault();\n      const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/users/${action}`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      });\n      const result = await response.json();\n      console.log(result);\n      const auth_token = result.data.token;\n      setToken(auth_token);\n      setIsLoggedIn(true);\n      const userData = await fetchUserData(auth_token);\n      setCurrentUser(userData.data.guest);\n      setShowCredentialsError(false);\n      navigate('/home');\n    } catch (error) {\n      const errorMessage = action === 'login' ? \"Incorrect username and password combination.\" : \"Username already taken.\";\n      setAccountError(errorMessage);\n      setShowCredentialsError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: action\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitAccountInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"form-label\",\n          for: \"inputUsername\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username\",\n          minLength: \"7\",\n          onChange: ev => {\n            setUsername(ev.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"formlabel\",\n          for: \"inputPassword\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          minLength: \"7\",\n          onChange: ev => {\n            setPassword(ev.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), showCredentialsError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: accountError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 30\n    }, this) : null, action === 'login' ? /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/account/register\",\n      children: \"Don't have an account? Please Sign up here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/account/login\",\n      children: \"Already have an account? Please Login here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AccountForm, \"EA0Jm3AoFTUsrZePifKnQePuHjw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/home/drillcode/coursework/FitTrack/src/components/AccountForm.js"],"names":["React","useState","useEffect","useNavigate","Link","AccountForm","setToken","setIsLoggedIn","isLoggedIn","username","setUsername","password","setPassword","showCredentialsError","setShowCredentialsError","accountError","setAccountError","currentUser","setCurrentUser","navigate","action","useParams","fetchUserData","auth_token","user_data_headers","console","log","response","fetch","headers","result","json","error","submitAccountInfo","event","preventDefault","method","body","JSON","stringify","user","data","token","userData","guest","errorMessage","ev","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nconst AccountForm = ({setToken, setIsLoggedIn, isLoggedIn}) => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [showCredentialsError, setShowCredentialsError] = useState(false)\n    const [accountError, setAccountError] = useState('')\n    const [currentUser, setCurrentUser] = useState({})\n    const navigate = useNavigate()\n    const {action} = useParams\n\n    useEffect(() => {\n        if (isLoggedIn) navigate('/home')\n    }, [isLoggedIn])\n\n    const fetchUserData = async (auth_token) => {\n        try {\n            const user_data_headers = {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${auth_token}`\n            }\n            console.log(user_data_headers)\n\n            const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/guests/me`, {\n                headers: user_data_headers\n            })\n            const result = await response.json()\n            console.log(result)\n            return result\n        }catch (error) {\n            console.log(error)\n        }\n    }\n\n    const submitAccountInfo = async (event) => {\n        try{\n            event.preventDefault();\n            const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/users/${action}`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user: {\n                    username: username,\n                    password: password\n                    }\n                })\n            })\n            const result = await response.json()\n            console.log(result)\n            const auth_token = result.data.token\n            setToken(auth_token)\n            setIsLoggedIn(true)\n            const userData = await fetchUserData(auth_token)\n            setCurrentUser(userData.data.guest)\n            setShowCredentialsError(false)\n            navigate('/home')\n        } catch(error) {\n            const errorMessage = action === 'login' ? \"Incorrect username and password combination.\" : \"Username already taken.\"\n            setAccountError (errorMessage)\n            setShowCredentialsError(true)\n        }\n    }\n\n    \n    return <>\n    <h1>{action}</h1>\n    <form onSubmit={submitAccountInfo}>\n        <div>\n            <label class=\"form-label\" for=\"inputUsername\">Username:</label>\n            <input type=\"text\" placeholder=\"username\" minLength=\"7\" onChange={(ev)=>{setUsername(ev.target.value)}} required/></div>\n        <div>\n            <label class=\"formlabel\" for=\"inputPassword\">Password:</label>\n            <input type=\"password\" placeholder=\"password\" minLength=\"7\" onChange={(ev)=>{setPassword(ev.target.value)}} required/></div>\n        <div><button type=\"submit\">Submit</button></div>\n    </form>\n    { showCredentialsError ? <div className=\"error\">{accountError}</div> : null }\n    {\n        action === 'login'\n        ? <Link to='/account/register'>Don't have an account? Please Sign up here.</Link>\n        : <Link to='/account/login'>Already have an account? Please Login here.</Link>\n    }\n    </>\n}\n\nexport default AccountForm;"]},"metadata":{},"sourceType":"module"}