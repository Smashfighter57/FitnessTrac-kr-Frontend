{"ast":null,"code":"import _asyncToGenerator from\"/home/drillcode/coursework/FitTrack/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/drillcode/coursework/FitTrack/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/drillcode/coursework/FitTrack/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import{Switch,Routes,Route,NavLink,BrowserRouter as Router}from'react-router-dom';import Home from'./Home';import Activities from'./Activities';import Routines from'./Routines';import AccountForm from'./AccountForm';import MyRoutines from'./MyRoutines';import Profile from'./Profile';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Main=function Main(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),currentUser=_useState4[0],setCurrentUser=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),activities=_useState6[0],setActivities=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),routines=_useState8[0],setRoutines=_useState8[1];var _useState9=useState('login'),_useState10=_slicedToArray(_useState9,2),accountPage=_useState10[0],setAccountPage=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isLoggedIn=_useState12[0],setIsLoggedIn=_useState12[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var savedToken,userData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:savedToken=localStorage.getItem('token');if(!savedToken){_context.next=9;break;}console.log(\"token exists\");setToken(savedToken);setIsLoggedIn(true);_context.next=7;return fetchUserData(savedToken);case 7:userData=_context.sent;setCurrentUser(userData.data.guest);case 9:case\"end\":return _context.stop();}}},_callee);})));return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:\"Hello World\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/home\",exact:true,element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to Fitness Tracker.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Please make sure to sign in or register as a user first before using our website.\"})]})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(AccountForm,{setToken:setToken,action:\"register\",setIsLoggedIn:setIsLoggedIn,isLoggedIn:isLoggedIn,setCurrentUser:setCurrentUser,currentUser:currentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(AccountForm,{setToken:setToken,action:\"login\",setIsLoggedIn:setIsLoggedIn,isLoggedIn:isLoggedIn,setCurrentUser:setCurrentUser,currentUser:currentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/activities\",element:/*#__PURE__*/_jsx(Activities,{token:token,setActivities:setActivities,activities:activities})}),/*#__PURE__*/_jsx(Route,{path:\"/routines\",element:/*#__PURE__*/_jsx(Routines,{token:token,setRoutines:setRoutines,routines:routines})}),/*#__PURE__*/_jsx(Route,{path:\"/account/:action\",element:/*#__PURE__*/_jsx(AccountForm,{setToken:setToken,setIsLoggedIn:setIsLoggedIn,isLoggedIn:isLoggedIn,setCurrentUser:setCurrentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(Profile,{isLoggedIn:isLoggedIn,currentUser:currentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/myRoutines\",element:/*#__PURE__*/_jsx(MyRoutines,{token:token,MyRoutines:MyRoutines})}),/*#__PURE__*/_jsx(Route,{path:\"/{accountPage}\",element:/*#__PURE__*/_jsx(_Fragment,{children:accountPage==='profile'?/*#__PURE__*/_jsx(Profile,{}):/*#__PURE__*/_jsx(AccountForm,{setToken:setToken,action:\"login\",setAccountPage:setAccountPage})})})]})]});};// const fetchAllRoutines = async (token) => {\n// }\n// // const fetchMyRoutines = async (username, token) => {\n// //     const myRoutines = await callApi({\n// //         url: `users/${username}/routines`,\n// //         method: 'GET',\n// //         //token:\n// //     })\n// //}\n// useEffect(async () => {\n//     if (MyRoutines.length === 0) {\n//         const fetchedMyRoutines = await fetchMyRoutines(userData)\n//     }\n// })\n// useEffect(async () => {\n//     if (!token) {\n//         setToken(localStorage.getItem('st-token'));\n//         return;\n//     }\n//     const data = await fetchUserData(token);\n//     setUserData(data);\n// })\nexport default Main;","map":{"version":3,"sources":["/home/drillcode/coursework/FitTrack/src/components/Main.js"],"names":["React","useState","useEffect","Switch","Routes","Route","NavLink","BrowserRouter","Router","Home","Activities","Routines","AccountForm","MyRoutines","Profile","Main","token","setToken","currentUser","setCurrentUser","activities","setActivities","routines","setRoutines","accountPage","setAccountPage","isLoggedIn","setIsLoggedIn","savedToken","localStorage","getItem","console","log","fetchUserData","userData","data","guest"],"mappings":"8WAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAAQC,MAAR,CAAgBC,MAAhB,CAAwBC,KAAxB,CAA+BC,OAA/B,CAAwCC,aAAa,GAAIC,CAAAA,MAAzD,KAAsE,kBAAtE,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,6IAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACnB,cAA0Bd,QAAQ,CAAC,EAAD,CAAlC,wCAAOe,KAAP,eAAcC,QAAd,eACA,eAAsChB,QAAQ,CAAC,EAAD,CAA9C,yCAAOiB,WAAP,eAAoBC,cAApB,eACA,eAAoClB,QAAQ,CAAC,EAAD,CAA5C,yCAAOmB,UAAP,eAAmBC,aAAnB,eACA,eAAgCpB,QAAQ,CAAC,EAAD,CAAxC,yCAAOqB,QAAP,eAAiBC,WAAjB,eACA,eAAsCtB,QAAQ,CAAC,OAAD,CAA9C,0CAAOuB,WAAP,gBAAoBC,cAApB,gBACA,gBAAoCxB,QAAQ,CAAC,KAAD,CAA5C,2CAAOyB,UAAP,gBAAmBC,aAAnB,gBAEAzB,SAAS,sEAAC,2JACA0B,UADA,CACaC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADb,KAEFF,UAFE,yBAGFG,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAf,QAAQ,CAACW,UAAD,CAAR,CACAD,aAAa,CAAC,IAAD,CAAb,CALE,sBAMqBM,CAAAA,aAAa,CAACL,UAAD,CANlC,QAMIM,QANJ,eAOFf,cAAc,CAACe,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAd,CAPE,sDAAD,GAAT,CAWA,mBAAM,wCACN,oCADM,cAEE,aAFF,cAGE,MAAC,MAAD,yBACI,KAAC,KAAD,EAAO,IAAI,CAAG,OAAd,CAAsB,KAAK,KAA3B,CAA4B,OAAO,cAC/B,wCACA,mDADA,cAEA,yGAFA,GADJ,EADJ,cAOI,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,OAAO,cAAG,KAAC,WAAD,EAAa,QAAQ,CAAEnB,QAAvB,CAAiC,MAAM,CAAC,UAAxC,CAAmD,aAAa,CAAEU,aAAlE,CAAiF,UAAU,CAAED,UAA7F,CAAyG,cAAc,CAAEP,cAAzH,CAAyI,WAAW,CAAED,WAAtJ,EAAlC,EAPJ,cAQI,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,OAAO,cAAG,KAAC,WAAD,EAAa,QAAQ,CAAGD,QAAxB,CAAkC,MAAM,CAAC,OAAzC,CAAiD,aAAa,CAAEU,aAAhE,CAA+E,UAAU,CAAED,UAA3F,CAAuG,cAAc,CAAEP,cAAvH,CAAuI,WAAW,CAAED,WAApJ,EAA/B,EARJ,cASI,KAAC,KAAD,EAAO,IAAI,CAAE,aAAb,CAA2B,OAAO,cAAE,KAAC,UAAD,EAAY,KAAK,CAAEF,KAAnB,CAA0B,aAAa,CAAEK,aAAzC,CAAwD,UAAU,CAAED,UAApE,EAApC,EATJ,cAUI,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,OAAO,cAAE,KAAC,QAAD,EAAU,KAAK,CAAEJ,KAAjB,CAAwB,WAAW,CAAEO,WAArC,CAAkD,QAAQ,CAAED,QAA5D,EAAjC,EAVJ,cAWI,KAAC,KAAD,EAAO,IAAI,CAAC,kBAAZ,CAA+B,OAAO,cAAG,KAAC,WAAD,EAAa,QAAQ,CAAEL,QAAvB,CAAiC,aAAa,CAAEU,aAAhD,CAA+D,UAAU,CAAED,UAA3E,CAAuF,cAAc,CAAEP,cAAvG,EAAzC,EAXJ,cAYI,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,cAAG,KAAC,OAAD,EAAS,UAAU,CAAEO,UAArB,CAAiC,WAAW,CAAER,WAA9C,EAAjC,EAZJ,cAaI,KAAC,KAAD,EAAO,IAAI,CAAC,aAAZ,CAA0B,OAAO,cAAE,KAAC,UAAD,EAAY,KAAK,CAAEF,KAAnB,CAA0B,UAAU,CAAEH,UAAtC,EAAnC,EAbJ,cAcI,KAAC,KAAD,EAAO,IAAI,iBAAX,CAA+B,OAAO,cAAE,yBACtCW,WAAW,GAAK,SAAhB,cACF,KAAC,OAAD,IADE,cACY,KAAC,WAAD,EAAa,QAAQ,CAAEP,QAAvB,CAAiC,MAAM,CAAC,OAAxC,CAAgD,cAAc,CAAEQ,cAAhE,EAF0B,EAAxC,EAdJ,GAHF,GAAN,CAuBC,CA1CD,CA4CA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAeV,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {Switch, Routes, Route, NavLink, BrowserRouter as Router} from 'react-router-dom'\nimport Home from './Home'\nimport Activities from './Activities'\nimport Routines from './Routines'\nimport AccountForm from './AccountForm'\nimport MyRoutines from './MyRoutines'\nimport Profile from './Profile'\n\nconst Main = () => {\nconst [token, setToken] = useState('')\nconst [currentUser, setCurrentUser] = useState('')\nconst [activities, setActivities] = useState([])\nconst [routines, setRoutines] = useState({})\nconst [accountPage, setAccountPage] = useState('login')\nconst [isLoggedIn, setIsLoggedIn] = useState(false)\n\nuseEffect(async () => {\n    const savedToken = localStorage.getItem('token')\n    if (savedToken){\n        console.log(\"token exists\")\n        setToken(savedToken)\n        setIsLoggedIn(true)\n        const userData = await fetchUserData(savedToken)\n        setCurrentUser(userData.data.guest)\n    }\n})\n\nreturn<>\n<div>Hello World</div>\n        <hr/>\n        <Routes>\n            <Route path = '/home' exact element ={\n                <>\n                <h1>Welcome to Fitness Tracker.</h1>\n                <h3>Please make sure to sign in or register as a user first before using our website.</h3>\n                </>\n            }/>\n            <Route path='/register' element={ <AccountForm setToken={setToken} action=\"register\" setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser} currentUser={currentUser} />} />\n            <Route path='/login' element={ <AccountForm setToken ={setToken} action=\"login\" setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser} currentUser={currentUser} />} />\n            <Route path ='/activities' element={<Activities token={token} setActivities={setActivities} activities={activities} />} />\n            <Route path='/routines' element={<Routines token={token} setRoutines={setRoutines} routines={routines} />} />\n            <Route path='/account/:action' element={ <AccountForm setToken={setToken} setIsLoggedIn={setIsLoggedIn} isLoggedIn={isLoggedIn} setCurrentUser={setCurrentUser} />} />\n            <Route path='/profile' element={ <Profile isLoggedIn={isLoggedIn} currentUser={currentUser} /> }/>\n            <Route path='/myRoutines' element={<MyRoutines token={token} MyRoutines={MyRoutines} />}/>\n            <Route path={`/{accountPage}`} element={<>\n            { accountPage === 'profile' ?\n            <Profile /> : <AccountForm setToken={setToken} action=\"login\" setAccountPage={setAccountPage} /> } \n            </>}/>\n        </Routes>\n</>\n}\n\n// const fetchAllRoutines = async (token) => {\n     \n// }\n\n// // const fetchMyRoutines = async (username, token) => {\n// //     const myRoutines = await callApi({\n// //         url: `users/${username}/routines`,\n// //         method: 'GET',\n// //         //token:\n\n// //     })\n\n// //}\n\n// useEffect(async () => {\n//     if (MyRoutines.length === 0) {\n//         const fetchedMyRoutines = await fetchMyRoutines(userData)\n//     }\n// })\n\n// useEffect(async () => {\n//     if (!token) {\n//         setToken(localStorage.getItem('st-token'));\n//         return;\n//     }\n//     const data = await fetchUserData(token);\n//     setUserData(data);\n// })\n\nexport default Main"]},"metadata":{},"sourceType":"module"}